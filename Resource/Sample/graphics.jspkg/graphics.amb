top: VBox {
    graphics: Graphics2D {
        width:      Int         640
        height:     Int         480
        size_x:     Float       6.28
        size_y:     Float       6.28
        origin_x:   Float       -3.14
        origin_y:   Float       -3.14
        draw: Event(context, count) %{
            let frame  = context.logicalFrame ;
            let offset = Math.PI * (count / 10.0) ;
            let minx   = frame.x ;
            let maxx   = frame.x + frame.width ;
            let step   = frame.width / 100 ;
            // console.log("minx: " + minx + ", maxx: " + maxx) ;
            /* Move to first position */
            context.moveTo(minx, Math.sin(minx + offset)) ;
            /* Draw sin curves */
            for(let x=minx ; x<=maxx ; x+=step) {
                context.lineTo(x, Math.sin(x + offset)) ;
            }
        %}
    }
    buttons: HBox {
        start_button: Button {
            title: String Listner(state: top.graphics.state) %{
                let result = "Unknown" ;
                switch(state) {
                    case AnimationState.idle:
                        result = "Start" ;
                    break ;
                    case AnimationState.run:
                        result = "Stop" ;
                    break ;
                    case AnimationState.pause:
                        result = "Wait" ;
                    break ;
                }
                return result ;
            %}
            pressed: Event() %{
                let grp = top.graphics ;
                switch(grp.state) {
                    case AnimationState.idle:
                        grp.start(1.0, 10.0) ;
                    break ;
                    case AnimationState.run:
                        grp.stop() ;
                    break ;
                    case AnimationState.pause:
                        console.log("No effect") ;
                    break ;
                }
            %}
        }
        quit_button: Button {
   		    title: String "Quit"
		    isEnabled: Bool Listner(state: top.graphics.state) %{
                let result = false ;
                switch(state) {
                    case AnimationState.idle:
                        result = true ;
                    break ;
                    case AnimationState.run:
                        result = false ;
                    break ;
                    case AnimationState.pause:
                        result = false ;
                    break ;
                }
                return result ;
            %}
		    pressed: Event() %{
			    leaveView(1) ;
            %}
        }
    }
    
}

