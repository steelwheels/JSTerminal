top: VBox {
	table_data: Table {
		storage:	"storage"
		path:		"members"
	}

	party_label: Label {
		text: "Party"
	}
	party_table: TableView {
		hasHeader:			true
		isSelectable:		true
		fieldNames: [
			{title:"Name",		field:"name"},
			{title:"Hit point",	field:"hitPoint"}
		]
		init: Init %{
			self.dataTable = top.table_data.table() ;
			self.reload() ;
        %}
		filter: Event(record) %{
			return record.mid > 0 ;
		%}
		sortOrder: SortOrder.increasing
		compare: Event(rec0, rec1) %{
			let res = compareNumbers(rec0.mid, rec1.mid) ;
			console.log("party: comp " + rec0.mid + ", " + rec1.mid + "->" + res) ;
			return res ;
		%}
		pressed: Event(record, field) %{
			if(record.mid > 0){
				record.mid = 0 ; // Remove from party
				top.party_table.reload() ;
				top.member_table.reload() ;
			}
		%}
    }

	member_label: Label {
		text: "Member"
	}
	member_table: TableView {
		hasHeader:			true
		isSelectable:		true
		fieldNames: [
			{title:"Name",		field:"name"},
			{title:"Hit point",	field:"hitPoint"}
		]
		init: Init %{
			self.dataTable = top.table_data.table() ;
			self.reload() ;
        %}
		filter: Event(record) %{
			return record.mid == 0 ;
		%}
		sortOrder: SortOrder.increasing
		compare: Event(rec0, rec1) %{
			let res = compareStrings(rec0.name, rec1.name) ;
			console.log("party: comp " + rec0.name + ", " + rec1.name + "->" + res) ;
			return res ;
		%}
		pressed: Event(record, field) %{
			let members = top.table_data.table() ;
			let count = members.recordCount ;
			if(count < 6){
				record.mid = count + 1 ;
				top.party_table.reload() ;
				top.member_table.reload() ;
			}
		%}
    }

	quit_button: Button {
   		title: "Quit"
		pressed: Event() %{
			leaveView(1) ;
		%}
    }
}

