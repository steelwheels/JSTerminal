top: VBox {
	storage: Storage {
		name:	"storage"
		sets: {
			party:		"party"
		}
		tables: {
			members:	"members"
		}
	}

	party_label: Label {
		text: "Party"
	}
	party_table: TableView {
		hasHeader:			true
		isSelectable:		true
		fieldNames: [
			{title:"Name",		field:"name"},
			{title:"Hit point",	field:"hitPoint"}
		]
		init: Init %{
			self.dataTable = top.storage.table("members") ;
			self.reload() ;
        %}
		filter: Event(record) %{
			let party = top.storage.set("party") ;
			return party.contains(record.mid) ;
		%}
		pressed: Event(record, field) %{
			if(record.mid > 0){
				record.mid = 0 ; // Remove from party
				top.party_table.reload() ;
				top.member_table.reload() ;
			}
		%}
    }

	member_label: Label {
		text: "Member"
	}
	member_table: TableView {
		hasHeader:			true
		isSelectable:		true
		fieldNames: [
			{title:"Name",		field:"name"},
			{title:"Hit point",	field:"hitPoint"}
		]
		init: Init %{
			self.dataTable = top.storage.table("members") ;
			self.reload() ;
        %}
		filter: Event(record) %{
			let party = top.storage.set("party") ;
			return !party.contains(record.mid) ;
		%}
		pressed: Event(record, field) %{
			let party = top.storage.set("party") ;
			let count = party.count ;
			if(count < 6){
				record.mid = count + 1 ;
				top.party_table.reload() ;
				top.member_table.reload() ;
			}
		%}
    }

	quit_button: Button {
   		title: "Quit"
		pressed: Event() %{
			leaveView(1) ;
		%}
    }
}

