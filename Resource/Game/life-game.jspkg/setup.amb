// Setup view for life-game
top: VBox {
	lifes: 			String	["None"]
	life_index:		Int		0
	bitmaps:		Int		0

    bitmap: Bitmap {
			width:			Int 640
			height:			Int 480
			rowCount: 		Int 50
			columnCount:	Int 50
			duration:		Float 2.0
			draw: Event(context, count) %{
				if(count == 0) {
					let bitmapname = top.lifes[top.life_index] ;
					let bitmapval = top.bitmaps[bitmapname].data ;
					console.log("name=" + bitmapname + ", data=" + bitmapval) ;
					context.set(0, 0, bitmapval) ;
				} else {
					//context.set(pos, pos, context.blue) ;
					self.update(context) ;
				}
			%}

			update: Int Func(context) %{
				console.log("update context") ;
				return 0 ;
			%}
	}
	buttons: HBox {
		life_selector: PopupMenu {
			items: String Listner(lifes: top.lifes) %{
				return lifes ;
			%}
			selected: Event(index) %{
				console.log("selected = " + index) ;
				top.life_index = index ;
			%}
		}
		ctrl_button: Button {
			title: String "Start"
			pressed: Event() %{
				console.log("startted") ;
				top.bitmap.start(0.1, 0.1) ;
        	%}
		}
		quit_button: Button {
   			title: String "Quit"
			pressed: Event() %{
				leaveView(1) ;
        	%}
    	}
	}
    init: Init %{
		let bitmaps = readData("bitmaps") ;

		/* Collect bitmap names */
		let names   = [] ;
		for(const key of Object.keys(bitmaps)) {
			let elm = bitmaps[key] ;
			if(isBitmapValue(elm)) {
				names.push(key) ;
			}
		}
		//console.log("names= " + names) ;

		/* Initilize global variables */
		top.lifes		= names ;
		top.life_index	= top.buttons.life_selector.index ;
		top.bitmaps		= bitmaps ;

		/* Draw initial bitmap */
		top.bitmap.start(0.1, 0.1) ;
	%}
}

