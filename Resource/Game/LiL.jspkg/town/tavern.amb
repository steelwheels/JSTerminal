top: VBox {
	members: Table {
        storage: "main"
		path:	 "data.members"
	}

    title: ImageView {
        name: "tavern_title"
    }

    partyTitle: Label {
		text: "Party members"
    }
    partyTable: TableView {
		hasHeader:		true
		isSelectable:	true
		rowCount:		6
		fieldNames: [
					{field:"name",          title:"Name"},
					{field:"level",         title:"Level"},
					{field:"hitPoint",      title:"HP"},
					{field:"magicPoint",    title:"MP"}
			]
		init: Init %{
			self.dataTable = top.members.table() ;
			self.reload() ;
		%}
		sortOrder: SortOrder.increasing
		compare: Event(rec0, rec1) %{
            return compareNumbers(rec0.mid, rec1.mid) ;
        %}
        filter: Event(rec) %{
            return (rec.mid > 0) ;
        %}
		l_update: Listner(update: top.members.update) %{
			self.reload() ;
		%}
    }
    editParty: HBox {
	    join_button: Button {
		title:  "Join party"
		isEnabled: Listner(didsel: top.memberTable.didSelected) %{
			return didsel ;
		%}
		pressed: Event() %{
			let rec = top.memberTable.selectedRecord() ;
			if(rec == null){
				return ;
			}
			let curnum  = top.partyTable.recordCount ;
			if(curnum >= 6){
				return ;
			}
			rec.mid = curnum + 1 ; // mid is started from 1
		%}
	    }
	    leave_button: Button {
		title:  "Leave party"
		isEnabled: Listner(didsel: top.partyTable.didSelected) %{
			return didsel ;
		%}
		pressed: Event() %{
			let rec = top.partyTable.selectedRecord() ;
			if(rec != null){
				/* Release mid */
				rec.mid = 0 ;
			}
		%}
	    }
    }

    memberTitle: Label {
	text: "All members"
    }
    memberTable: TableView {
		hasHeader:    true
		isSelectable: true
		fieldNames: [
                {field:"name",          title:"Name"},
                {field:"level",         title:"Level"},
                {field:"hitPoint",      title:"HP"},
                {field:"magicPoint",    title:"MP"}
        ]
		init: Init %{
			self.dataTable = top.members.table() ;
			self.reload() ;
		%}
		sortOrder: SortOrder.increasing
		compare: Event(rec0, rec1) %{
            return compareStrings(rec0.name, rec1.name) ;
        %}
        filter: Event(rec) %{
            return (rec.mid == 0) ;
        %}
		l_update: Listner(update: top.members.update) %{
			self.reload() ;
		%}
    }
    change_member: HBox {
	    add_button: Button {
		title:  "Add member"
		pressed: Event() %{
			let record = enterView("gym", null) ;
			if(isRecord(record)){
				top.members.table().append(record) ;
			}
		%}
	    }
	    del_button: Button {
		title:  "Delete member"
		isEnabled: Listner(didsel: top.memberTable.didSelected) %{
			return didsel ;
		%}
		pressed: Event() %{
			top.memberTable.removeSelectedRecord() ;
		%}
	    }
    }
    quit_button: Button {
        title:  "Quit"
        pressed: Event() %{
		top.members.table().save() ;
		leaveView(0) ;
        %}
    }
}

