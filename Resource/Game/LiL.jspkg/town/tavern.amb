top: VBox {
    storage: Storage {
        name: "main"
		tables: {
			party:   "data.party",
			members: "data.members"
		}
    }

    title: ImageView {
        name: "tavern_title"
    }

    partyTitle: Label {
		text: "Party members"
    }
    partyTable: TableView {
		hasHeader:       true
		isSelectable:    true
		visibleRowCount: 6
		fieldNames: [
					{field:"name",          title:"Name"},
					{field:"level",         title:"Level"},
					{field:"hitPoint",      title:"HP"},
					{field:"magicPoint",    title:"MP"}
			]
		init: Init %{
			self.dataTable = top.storage.party ;
			self.reload() ;
		%}
    }
    editParty: HBox {
	    join_button: Button {
		title:  "Join party"
		isEnabled: Listner(didsel: top.memberTable.didSelected) %{
			return didsel ;
		%}
		pressed: Event() %{
			let recs = top.memberTable.selectedRecords() ;
			let inc  = 0 ;
			for(rec of recs){
				/* Assign pid */
				rec.pid =  top.partyTable.rowCount + inc ;
				inc     += 1 ;
			}
			top.partyTable.reload() ;
			top.memberTable.reload() ;
		%}
	    }
	    leave_button: Button {
		title:  "Leave party"
		isEnabled: Listner(didsel: top.partyTable.didSelected) %{
			return didsel ;
		%}
		pressed: Event() %{
			let recs = top.partyTable.selectedRecords() ;
			for(rec of recs){
				/* Release pid */
				rec.pid = 0 ;
				top.partyTable.reload() ;
				top.memberTable.reload() ;
			}
		%}
	    }
    }

    memberTitle: Label {
	text: "All members"
    }
    memberTable: TableView {
		hasHeader:    true
		isSelectable: true
		fieldNames: [
                {field:"name",          title:"Name"},
                {field:"level",         title:"Level"},
                {field:"hitPoint",      title:"HP"},
                {field:"magicPoint",    title:"MP"}
        ]
		init: Init %{
			self.dataTable = top.storage.members ;
			self.reload() ;
		%}
    }
    change_member: HBox {
	    add_button: Button {
		title:  "Add member"
		pressed: Event() %{
			let record = enterView("gym", null) ;
			if(isRecord(record)){
				top.storage.members.append(record) ;
				top.memberTable.reload() ;
			}
		%}
	    }
	    del_button: Button {
		title:  "Delete member"
		isEnabled: Listner(didsel: top.memberTable.didSelected) %{
			return didsel ;
		%}
		pressed: Event() %{
                        top.memberTable.removeSelectedRows() ;
		%}
	    }
    }
    quit_button: Button {
        title:  "Quit"
        pressed: Event() %{
		top.storage.members.save() ;
		leaveView(0) ;
        %}
    }
}

