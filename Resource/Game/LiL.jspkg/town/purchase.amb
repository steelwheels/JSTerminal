top: VBox
{
	weapon_id:	Init %{ return Argument.weapon_id ; %}
	is_known:   Init %{ return Argument.is_known ;  %}

	weapons: Table {
		storage:	"main"
		path:		"data.list.weapons"
	}
	members: Table {
		storage:	"main"
		path:		"data.members"
	}

	selected_item: HBox {
		label: Label {
			text: "Selected equipment: "
		}
		item: Label {
			text: Listner(wid: top.weapon_id, isknown: top.is_known) %{
				let recs = top.weapons.search("weapon_id", wid) ;
				if(recs.length > 0){
					return isknown ? recs[0].long_name : recs[0].short_name ;
				} else {
					return "unknown" ;
				}
			%}
		}
	}

	selected_member: VBox {
		label: Label {
			text: "Select member to equip:"
		}
		member_table: TableView {
			hasHeader:		true
			fieldNames: [
				{field:"name",		title:"Name"},
				{field:"level",		title:"Level"},
				{field:"job",		title:"Job"}
			]
			filter: Func(self, record) %{
				let wid = top.weapon_id ;
				if(wid < 0){
					return false
				}
				let weprecs = top.weapons.search("weapon_id", wid) ;
				if(weprecs.length < 1){
					return false
				}

				let job = record.job ;
				if(Character.is_job_in_string(job, weprecs[0].match)){
					return true ;
				} else {
					return false ;
				}
			%}
			init: Init %{
				self.dataTable = top.members.table() ;
				self.reload() ;
			%}
		}
	}

	buttons: HBox {
		buy_button: Button {
			title:  "Buy"
			pressed: Event() %{
				leaveView(true) ;
			%}
		}
		not_buy_button: Button {
			title:  "Do not buy"
			pressed: Event() %{
				leaveView(false) ;
			%}
		}
	}
}

